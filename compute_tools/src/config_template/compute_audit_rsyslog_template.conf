# Load imfile module to read log files
module(load="imfile")

# Input configuration for log files in the specified directory
# The messages can be multiline. The start of the message is a timestamp
# in "%Y-%m-%d %H:%M:%S.%3N GMT" (so timezone hardcoded).
# Replace log_directory with the directory containing the log files
input(type="imfile" File="{log_directory}/*.log"
  Tag="pgaudit_log" Severity="info" Facility="local5"
  startmsg.regex="^[[:digit:]]{{4}}-[[:digit:]]{{2}}-[[:digit:]]{{2}} [[:digit:]]{{2}}:[[:digit:]]{{2}}:[[:digit:]]{{2}}.[[:digit:]]{{3}} GMT,")

# the directory to store rsyslog state files
global(
  workDirectory="/var/log/rsyslog"
  DefaultNetstreamDriverCAFile="/etc/ssl/certs/ca-certificates.crt"
)

# Construct json, endpoint_id and project_id as additional metadata
set $.json_log!endpoint_id = "{endpoint_id}";
set $.json_log!project_id = "{project_id}";
set $.json_log!msg = $msg;

# Template suitable for rfc5424 syslog format
template(name="PgAuditLog" type="string"
    string="<%PRI%>1 %TIMESTAMP:::date-rfc3339% %HOSTNAME% - - - - %$.json_log%")

# Forward to remote syslog receiver (over TLS)
if ( $syslogtag == 'pgaudit_log') then {{
  action(type="omfwd" target="{remote_syslog_host}" port="{remote_syslog_port}" protocol="tcp"
    template="PgAuditLog"
    queue.type="linkedList"
    queue.size="1000"
    action.ResumeRetryCount="10"
    StreamDriver="gtls"
    StreamDriverMode="1"
    StreamDriverAuthMode="x509/name"
    StreamDriverPermittedPeers="{remote_syslog_host}"
    StreamDriver.CheckExtendedKeyPurpose="on"
    StreamDriver.PermitExpiredCerts="off"
  )
}}
